let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/.config/nvim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +39 lua/saman/plugins/cmp.lua
badd +12 lua/saman/plugins/auto-session.lua
badd +1 lua/saman/plugins/telescope.lua
badd +4 lua/saman/plugins/whichkey.lua
badd +2 lua/saman/init.lua
badd +15 lua/saman/lazy.lua
badd +3 lua/saman/plugins/maximizer.lua
badd +51 lua/saman/plugins/lualine.lua
badd +6 lua/saman/plugins/init.lua
badd +4 lua/saman/plugins/gitsigns.lua
badd +1 lua/saman/plugins/fugitive.lua
badd +6 lua/saman/plugins/formatting.lua
badd +15 lua/saman/plugins/colors.lua
badd +1 lua/saman/plugins/autotag.lua
badd +1 lua/saman/plugins/lsp-signature.lua
badd +2 lua/saman/core/init.lua
badd +71 lua/saman/core/keymaps.lua
badd +198 after/neotree.lua
badd +1 lua/saman/plugins/lsp/lspconfig.lua
badd +1 lua/saman/plugins/lsp/none-ls.lua
badd +35 lua/saman/core/options.lua
badd +35 lua/saman/plugins/treeseter.lua
badd +17 lua/saman/plugins/neotree.lua
badd +1 init.lua
badd +4 lua/saman/plugins/comment.lua
badd +1 ~/.config/nvim/lua/saman/plugins/lsp/mason.lua
badd +65 ~/Documents/code/healbe/healer-api/utils/silverComision.js
badd +69 ~/.config/nvim/lua/saman/plugins/flutter-tools.lua
badd +1 lazy-lock.json
badd +20 ~/.config/nvim/lua/saman/plugins/inlayhint.lua
badd +3 ~/.config/nvim/lua/saman/plugins/lsp/magick.lua
badd +5 ~/.config/nvim/lua/saman/plugins/treeseter-context.lua
badd +4 ~/.config/nvim/lua/saman/plugins/mini.lua
badd +44 ~/.config/nvim/lua/saman/plugins/mini-indentScope.lua
badd +3 ~/.config/nvim/lua/saman/plugins/dap.lua
badd +7 ~/.config/nvim/lua/saman/plugins/blankindent.lua
badd +17 ~/.config/nvim/lua/saman/plugins/autopairs.lua
badd +16 man://builtin(1)
argglobal
%argdel
edit lua/saman/plugins/auto-session.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 30 + 67) / 135)
exe 'vert 2resize ' . ((&columns * 104 + 67) / 135)
argglobal
enew
file neo-tree\ filesystem\ \[1]
balt lua/saman/plugins/auto-session.lua
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
wincmd w
argglobal
balt lua/saman/plugins/neotree.lua
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 12 - ((11 * winheight(0) + 37) / 74)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 12
normal! 010|
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 30 + 67) / 135)
exe 'vert 2resize ' . ((&columns * 104 + 67) / 135)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
