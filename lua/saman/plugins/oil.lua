return {
	-- "stevearc/oil.nvim",
	-- event = "VeryLazy",
	-- dependencies = { "nvim-tree/nvim-web-devicons" },
	-- keys = {
	-- 	{ "-", ":Oil<CR>", desc = "Open parent directory" },
	-- },
	--
	-- config = function()
	-- 	require("oil").setup({
	-- 		-- Oil will take over directory buffers (e.g. `vim .` or `:e src/`)
	-- 		-- Set to false if you still want to use netrw.
	-- 		default_file_explorer = true,
	-- 		-- Id is automatically added at the beginning, and name at the end
	-- 		-- See :help oil-columns
	-- 		columns = {
	-- 			"icon",
	-- 			-- "permissions",
	-- 			-- "size",
	-- 			-- "mtime",
	-- 		},
	-- 		-- Buffer-local options to use for oil buffers
	-- 		buf_options = {
	-- 			buflisted = false,
	-- 			bufhidden = "hide",
	-- 		},
	-- 		-- Window-local options to use for oil buffers
	-- 		win_options = {
	-- 			wrap = false,
	-- 			signcolumn = "no",
	-- 			cursorcolumn = false,
	-- 			foldcolumn = "0",
	-- 			spell = false,
	-- 			list = false,
	-- 			conceallevel = 3,
	-- 			concealcursor = "nvic",
	-- 		},
	-- 		-- Send deleted files to the trash instead of permanently deleting them (:help oil-trash)
	-- 		delete_to_trash = false,
	-- 		-- Skip the confirmation popup for simple operations (:help oil.skip_confirm_for_simple_edits)
	-- 		skip_confirm_for_simple_edits = false,
	-- 		-- Selecting a new/moved/renamed file or directory will prompt you to save changes first
	-- 		-- (:help prompt_save_on_select_new_entry)
	-- 		prompt_save_on_select_new_entry = true,
	-- 		-- Oil will automatically delete hidden buffers after this delay
	-- 		-- You can set the delay to false to disable cleanup entirely
	-- 		-- Note that the cleanup process only starts when none of the oil buffers are currently displayed
	-- 		cleanup_delay_ms = 2000,
	-- 		-- Set to true to autosave buffers that are updated with LSP willRenameFiles
	-- 		-- Set to "unmodified" to only save unmodified buffers
	-- 		lsp_rename_autosave = false,
	-- 		-- Constrain the cursor to the editable parts of the oil buffer
	-- 		-- Set to `false` to disable, or "name" to keep it on the file names
	-- 		constrain_cursor = "editable",
	-- 		-- Keymaps in oil buffer. Can be any value that `vim.keymap.set` accepts OR a table of keymap
	-- 		-- options with a `callback` (e.g. { callback = function() ... end, desc = "", mode = "n" })
	-- 		-- Additionally, if it is a string that matches "actions.<name>",
	-- 		-- it will use the mapping at require("oil.actions").<name>
	-- 		-- Set to `false` to remove a keymap
	-- 		-- See :help oil-actions for a list of all available actions
	-- 		keymaps = {
	-- 			["g?"] = "actions.show_help",
	-- 			["<CR>"] = "actions.select",
	-- 			["<C-v>"] = "actions.select_vsplit",
	-- 			["<C-s>"] = "actions.select_split",
	-- 			["<C-t>"] = "actions.select_tab",
	-- 			["P"] = "actions.preview",
	-- 			["q"] = "actions.close",
	-- 			-- ["<C-l>"] = "actions.refresh",
	-- 			["-"] = "actions.parent",
	-- 			-- ["_"] = "actions.open_cwd",
	-- 			-- ["`"] = "actions.cd",
	-- 			-- ["~"] = "actions.tcd",
	-- 			["gs"] = "actions.change_sort",
	-- 			-- ["gx"] = "actions.open_external",
	-- 			["g."] = "actions.toggle_hidden",
	-- 			-- ["g\\"] = "actions.toggle_trash",
	-- 		},
	-- 		-- Set to false to disable all of the above keymaps
	-- 		use_default_keymaps = false,
	-- 		view_options = {
	-- 			-- Show files and directories that start with "."
	-- 			show_hidden = false,
	-- 			-- This function defines what is considered a "hidden" file
	-- 			is_hidden_file = function(name, bufnr)
	-- 				return vim.startswith(name, ".")
	-- 			end,
	-- 			-- This function defines what will never be shown, even when `show_hidden` is set
	-- 			is_always_hidden = function(name, bufnr)
	-- 				return false
	-- 			end,
	-- 			sort = {
	-- 				-- sort order can be "asc" or "desc"
	-- 				-- see :help oil-columns to see which columns are sortable
	-- 				{ "type", "asc" },
	-- 				{ "name", "asc" },
	-- 			},
	-- 		},
	-- 	})
	-- end,
}
